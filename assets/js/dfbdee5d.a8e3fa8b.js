"use strict";(self.webpackChunkSOVD=self.webpackChunkSOVD||[]).push([[1110],{3920:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"simulation/simulation-aspects","title":"Simulation Aspects","description":"Mock ECUs and HPCs","source":"@site/docs/simulation/5_simulation-aspects.md","sourceDirName":"simulation","slug":"/simulation/simulation-aspects","permalink":"/SOVD/docs/simulation/simulation-aspects","draft":false,"unlisted":false,"editUrl":"https://github.com/CagriCatik/SOVD/edit/main/docs/simulation/5_simulation-aspects.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"simulationSidebar","previous":{"title":"Core Features","permalink":"/SOVD/docs/simulation/core-features"},"next":{"title":"Use Cases","permalink":"/SOVD/docs/simulation/use-cases"}}');var i=n(4848),a=n(8453);const o={},r="Simulation Aspects",c={},l=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"simulation-aspects",children:"Simulation Aspects"})}),"\n",(0,i.jsx)(t.p,{children:"Mock ECUs and HPCs\nTo emulate real vehicle systems, the simulator includes mock Electronic Control Units (ECUs) and High-Performance Computers (HPCs). These mock components replicate the behavior and responses of actual hardware, providing a realistic diagnostic environment."}),"\n",(0,i.jsx)(t.p,{children:"Features:"}),"\n",(0,i.jsx)(t.p,{children:"Configurable ECUs/HPCs: Define properties and behaviors to match different vehicle systems.\nSimulated Communication: Emulate communication protocols and data exchanges between components.\nPredefined Diagnostic Responses and Fault Scenarios\nThe simulator incorporates predefined diagnostic responses and fault scenarios to facilitate comprehensive testing. These scenarios mimic real-world issues, allowing users to validate diagnostic procedures and fault management strategies."}),"\n",(0,i.jsx)(t.p,{children:"Features:"}),"\n",(0,i.jsx)(t.p,{children:"Response Templates: Standardized responses for common diagnostic requests.\nFault Injection: Introduce specific fault codes and scenarios to test diagnostic handling.\nGraphical Interface\nA user-friendly graphical interface, such as Swagger UI, is integrated to allow interactive API exploration and testing. This interface aids developers and testers in understanding and utilizing the simulator\u2019s capabilities without needing deep technical knowledge of the API."}),"\n",(0,i.jsx)(t.p,{children:"Features:"}),"\n",(0,i.jsx)(t.p,{children:"API Interaction: Execute API calls directly from the browser interface.\nDocumentation Access: View detailed descriptions of endpoints, parameters, and responses.\nTesting Tools: Validate API functionalities in real-time."})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(6540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);